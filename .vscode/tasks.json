{
	"version": "2.0.0",
	"tasks": [
		{
			"type": "shell",
			"label": "build",
			"command": "scons",
			"args": [
				"-j40"
			],
			"options": {
				"cwd": "${workspaceFolder}"
			},
			"problemMatcher": [
				"$gcc"
			],
			"group": "build",
			"dependsOn": [
				// "sync_compiler_flags"
			]
		},
		{
			"type": "shell",
			"label": "sync_compiler_flags",
			"command": "python",
			"args": [
				"scripts/sync_compiler_flags.py"
			],
			"options": {
				"cwd": "${workspaceFolder}"
			},
			"group": "build",
			"problemMatcher": []
		},
		{
			"type": "shell",
			"label": "run anno",
			"command": "python",
			"args": [
				"scripts/run_anno.py",
				"${file}"
			],
			"options": {
				"cwd": "${workspaceFolder}"
			},
			"group": "build",
			"problemMatcher": []
		},
		{
			"type": "shell",
			"label": "gen_app_config",
			"command": "python",
			"args": [
				"scripts/gen_app_config.py"
			],
			"options": {
				"cwd": "${workspaceFolder}"
			},
			"group": "build",
			"problemMatcher": []
		},
		{
			"type": "shell",
			"label": "menuconfig",
			"command": "scons",
			"args": [
				"--menuconfig"
			],
			"options": {
				"cwd": "${workspaceFolder}"
			},
			"group": "none",
			"dependsOn": [
				"gen_app_config"
			],
			"presentation": {
				"panel": "shared",
				"reveal": "always",
				"focus": true
			},
			"problemMatcher": []
		},
		{
			"type": "shell",
			"label": "gen_vsc",
			"command": "scons",
			"args": [
				"--target=vsc"
			],
			"options": {
				"cwd": "${workspaceFolder}"
			},
			"dependsOn": [
				"menuconfig"
			],
			"group": "build",
			"problemMatcher": []
		},
		{
			"type": "shell",
			"label": "config",
			"command": "python",
			"args": [
				"scripts/patch_settings.py"
			],
			"options": {
				"cwd": "${workspaceFolder}"
			},
			"dependsOn": [
				"gen_vsc"
			],
			"group": "build",
			"problemMatcher": []
		},
		{
			"type": "shell",
			"label": "reset",
			"command": "echo reset | telnet ${env:DBG_SERVER} ${env:TELNET_PORT}",
			"problemMatcher": []
		},
		{
			"type": "shell",
			"label": "halt",
			"command": "echo halt | telnet ${env:DBG_SERVER} ${env:TELNET_PORT}",
			"problemMatcher": []
		}
	]
}